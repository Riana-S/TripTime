declare const AVP = "avp";
declare function getEnv(): ModeKind;
type ModeKind = 'avp' | undefined;

declare function getFinalBase(userBase: string | undefined, mode: ModeKind, pluginOutputDir?: string): string | undefined;
declare function getFinalOutdir(userOutDir: string | undefined, mode: ModeKind, pluginOutputDir?: string): string;
declare function addFirstSlash(input?: string): string;
declare function removeFirstSlash(input?: string): string;
declare function getReactSDKAliasByMode(mode?: ModeKind): {
    '@webspatial/react-sdk$': string;
};
declare function getReactSDKAliasReplacementByMode(mode?: ModeKind): {
    find: RegExp;
    replacement: string;
};
declare function getJSXAliasByMode(mode?: ModeKind): {
    '@webspatial/react-sdk/jsx-dev-runtime': string;
    '@webspatial/react-sdk/jsx-runtime': string;
};
declare function getJSXImportSourceByMode(mode?: ModeKind): "@webspatial/react-sdk/default" | "@webspatial/react-sdk/web";
declare function getDefineByMode(mode?: ModeKind): {
    'window.XR_ENV': string;
    'process.env.XR_ENV': string;
    'import.meta.env.XR_ENV': string;
} | {
    'window.XR_ENV': undefined;
    'process.env.XR_ENV': undefined;
    'import.meta.env.XR_ENV': undefined;
};
declare function getDefineXrEnvBase(finalBase?: string): {
    __XR_ENV_BASE__: string;
};

declare global {
  var __XR_ENV_BASE__: string
}

export { AVP, type ModeKind, addFirstSlash, getDefineByMode, getDefineXrEnvBase, getEnv, getFinalBase, getFinalOutdir, getJSXAliasByMode, getJSXImportSourceByMode, getReactSDKAliasByMode, getReactSDKAliasReplacementByMode, removeFirstSlash };
