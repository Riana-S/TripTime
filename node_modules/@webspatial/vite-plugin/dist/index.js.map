{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { PluginOption, UserConfig, mergeConfig } from 'vite'\nimport {\n  AVP,\n  getDefineByMode,\n  getDefineXrEnvBase,\n  getEnv,\n  getFinalBase,\n  getFinalOutdir,\n  getReactSDKAliasReplacementByMode,\n} from '@webspatial/shared'\nexport type * from '@webspatial/shared'\ninterface WebSpatialOptions {\n  // XR_ENV\n  mode?: 'avp'\n\n  // base path\n  outputDir?: string\n}\nexport default function (options: WebSpatialOptions = {}): PluginOption[] {\n  let mode = options?.mode ?? getEnv()\n  let outputDir = options?.outputDir\n  console.log('ðŸš€ ~ mode:', mode)\n  return [\n    {\n      name: 'vite-plugin-webspatial-common',\n      config: config => {\n        const myConfig: UserConfig = {\n          esbuild: {\n            jsxImportSource:\n              mode === 'avp'\n                ? '@webspatial/react-sdk/default'\n                : '@webspatial/react-sdk/web',\n          },\n        }\n        const finalConfig = mergeConfig(config, myConfig)\n\n        return finalConfig\n      },\n    },\n    {\n      name: 'vite-plugin-webspatial-serve',\n      apply: 'serve',\n      config: userCfg => {\n        const userBase = userCfg.base\n        const finalBase = getFinalBase(userBase, mode, outputDir)\n        console.log('ðŸš€ ~ finalBase:', finalBase)\n        const userOutDir = userCfg.build?.outDir\n        const finalOutdir = getFinalOutdir(userOutDir, mode, outputDir)\n        const config: UserConfig = {\n          define: {},\n          resolve: {\n            alias: [getReactSDKAliasReplacementByMode(mode)],\n          },\n          build: {\n            // Set output directory\n            outDir: finalOutdir,\n          },\n        }\n        config.base = finalBase\n        config.define = {\n          // Define environment variables for both Node and browser\n          ...getDefineByMode(mode),\n          ...getDefineXrEnvBase(finalBase),\n        }\n\n        console.log('ðŸš€ ~ config:', config)\n        return config\n      },\n    },\n\n    {\n      name: 'vite-plugin-webspatial-build',\n      apply: 'build',\n      config: (config, { command }) => {\n        const userOutDir = config.build?.outDir\n        const xrEnv = getEnv()\n        const userBase = config.base\n        const finalBase = getFinalBase(userBase, mode, outputDir)\n        const finalOutdir = getFinalOutdir(userOutDir, xrEnv, outputDir)\n\n        return {\n          base: finalBase,\n          resolve: {\n            alias: [getReactSDKAliasReplacementByMode(mode)],\n          },\n          define: {\n            // Define environment variables for both Node and browser\n            ...getDefineByMode(mode),\n            ...getDefineXrEnvBase(finalBase),\n          },\n          build: {\n            // Set output directory\n            outDir: finalOutdir,\n            // Do not empty the output directory for AVP build\n            emptyOutDir: xrEnv !== AVP,\n            // Remove custom rollup naming logic; use Vite defaults\n          },\n        }\n      },\n    },\n  ]\n}\n"],"mappings":";AAAA,SAAmC,mBAAmB;AACtD;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AASQ,SAAR,cAAkB,UAA6B,CAAC,GAAmB;AACxE,MAAI,OAAO,SAAS,QAAQ,OAAO;AACnC,MAAI,YAAY,SAAS;AACzB,UAAQ,IAAI,qBAAc,IAAI;AAC9B,SAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,QAAQ,YAAU;AAChB,cAAM,WAAuB;AAAA,UAC3B,SAAS;AAAA,YACP,iBACE,SAAS,QACL,kCACA;AAAA,UACR;AAAA,QACF;AACA,cAAM,cAAc,YAAY,QAAQ,QAAQ;AAEhD,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ,aAAW;AACjB,cAAM,WAAW,QAAQ;AACzB,cAAM,YAAY,aAAa,UAAU,MAAM,SAAS;AACxD,gBAAQ,IAAI,0BAAmB,SAAS;AACxC,cAAM,aAAa,QAAQ,OAAO;AAClC,cAAM,cAAc,eAAe,YAAY,MAAM,SAAS;AAC9D,cAAM,SAAqB;AAAA,UACzB,QAAQ,CAAC;AAAA,UACT,SAAS;AAAA,YACP,OAAO,CAAC,kCAAkC,IAAI,CAAC;AAAA,UACjD;AAAA,UACA,OAAO;AAAA;AAAA,YAEL,QAAQ;AAAA,UACV;AAAA,QACF;AACA,eAAO,OAAO;AACd,eAAO,SAAS;AAAA;AAAA,UAEd,GAAG,gBAAgB,IAAI;AAAA,UACvB,GAAG,mBAAmB,SAAS;AAAA,QACjC;AAEA,gBAAQ,IAAI,uBAAgB,MAAM;AAClC,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IAEA;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ,CAAC,QAAQ,EAAE,QAAQ,MAAM;AAC/B,cAAM,aAAa,OAAO,OAAO;AACjC,cAAM,QAAQ,OAAO;AACrB,cAAM,WAAW,OAAO;AACxB,cAAM,YAAY,aAAa,UAAU,MAAM,SAAS;AACxD,cAAM,cAAc,eAAe,YAAY,OAAO,SAAS;AAE/D,eAAO;AAAA,UACL,MAAM;AAAA,UACN,SAAS;AAAA,YACP,OAAO,CAAC,kCAAkC,IAAI,CAAC;AAAA,UACjD;AAAA,UACA,QAAQ;AAAA;AAAA,YAEN,GAAG,gBAAgB,IAAI;AAAA,YACvB,GAAG,mBAAmB,SAAS;AAAA,UACjC;AAAA,UACA,OAAO;AAAA;AAAA,YAEL,QAAQ;AAAA;AAAA,YAER,aAAa,UAAU;AAAA;AAAA,UAEzB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;","names":[]}