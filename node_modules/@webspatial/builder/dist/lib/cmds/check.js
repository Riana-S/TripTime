"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkBuildParams = checkBuildParams;
exports.checkStoreParams = checkStoreParams;
const validate_1 = require("../pwa/validate");
function checkBuildParams(args, isDev = false) {
    if (args['manifest'] && args['manifestUrl']) {
        throw new Error('--manifest and --manifest-url cannot be used at the same time');
    }
    if (!args['teamId'] && !isDev) {
        throw new Error('--teamId is required');
    }
    if (args['base']) {
        if ((0, validate_1.validateURL)(args['base'])) {
            try {
                const baseUrl = new URL(args['base']);
                if (baseUrl.search || baseUrl.hash) {
                    throw new Error('The base parameter must be a path or url and cannot contain parameters or suffixes.');
                }
            }
            catch (e) {
                throw new Error('The base parameter must be a path or url and cannot contain parameters or suffixes.');
            }
        }
        else {
            const pathRegex = /(\?.*|\.\w+|#.*)$/;
            const pathPart = args['base'].split('/').pop() || '';
            if (pathRegex.test(pathPart)) {
                throw new Error('The base parameter must be a path or url and cannot contain parameters or suffixes.');
            }
        }
    }
}
function checkStoreParams(args) {
    if (!(args['u'] && args['p'])) {
        throw new Error('--u and --p is required');
    }
    if (!args['version']) {
        throw new Error('version is required');
    }
}
