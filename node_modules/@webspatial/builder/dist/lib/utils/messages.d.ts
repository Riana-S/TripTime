type Messages = {
    promptInstallJdk: string;
    promptJdkPath: string;
    messageDownloadJdk: string;
    messageDownloadJdkSrc: string;
    messageDecompressJdkSrc: string;
    messageDownloadJdkBin: string;
    messageDecompressJdkBin: string;
    promptInstallSdk: string;
    promptSdkPath: string;
    messageDownloadSdk: string;
    errorSdkTerms: string;
    promptSdkTerms: string;
    messageDownloadAndroidSdk: string;
    messageDecompressAndroidSdk: string;
    messageInstallingBuildTools: string;
    messageInvalidIcon: (iconPath: string) => string;
    errorStartUrlNotReachable: (launchUrl: string) => string;
    messageGeneratingAndroidProject: string;
    messageCheckSuccess: (url: string, redirectLocation?: string) => string;
    messageInitializingWebManifest: (manifestUrl: string) => string;
    messageInitializingLocalManifest: (manifestUrl: string) => string;
    errorMissingManifestParameter: string;
    warnFamilyPolicy: string;
    promptIconUrl: string;
    errorInvalidUrl: (url: string) => string;
    errorUrlMustBeImage: (mimeType: string) => string;
    promptVersionCode: string;
    promptVersionName: string;
    messageSigningKeyInformation: string;
    messageProjectGeneratedSuccess: string;
    messageSigningKeyCreation: string;
    messageSigningKeyNotFound: (path: string) => string;
    promptCreateKey: string;
    promptKeyFullName: string;
    promptKeyOrganizationalUnit: string;
    promptKeyOrganization: string;
    promptKeyCountry: string;
    promptKeystorePassword: string;
    promptKeyPassword: string;
    messageBuildingApp: string;
    messageEnterPasswords: (keypath: string, keyalias: string) => string;
    errorMinLength: (minLength: number, actualLength: number) => string;
    errorMaxLength: (maxLength: number, actualLength: number) => string;
    errorInvalidInteger: (integer: string) => string;
    messageApkSuccess: (filename: string) => string;
    missingUrlToCheck: string;
};
export declare const messages: Messages;
export {};
