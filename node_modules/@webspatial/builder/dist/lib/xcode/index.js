"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.XcodeManager = void 0;
const resource_1 = require("../resource");
const xcodeproject_1 = require("./xcodeproject");
const xcodebuild_1 = require("./xcodebuild");
const xcrun_1 = require("./xcrun");
const path_1 = require("path");
class XcodeManager {
    static async parseProject(option, isDev = false) {
        const projectPath = resource_1.PROJECT_DIRECTORY + '/web-spatial.xcodeproj/project.pbxproj';
        await xcodeproject_1.default.modify(projectPath, option, isDev);
        console.log('write project.pbxproj: ok');
    }
    static async build(exportPath) {
        await xcodebuild_1.default.archive(exportPath);
    }
    static async upload(option, appInfo) {
        if (option['u'] && option['p']) {
            // use username, password
            xcrun_1.default.uploadApp('"' + (0, path_1.join)(resource_1.PROJECT_EXPORT_DIRECTORY, `${appInfo.name}.ipa`) + '"', option['u'], option['p'], true);
        }
        else if (option['k'] && option['i']) {
            // use apiKey, apiIssuer
            xcrun_1.default.uploadApp('"' + (0, path_1.join)(resource_1.PROJECT_EXPORT_DIRECTORY, `${appInfo.name}.ipa`) + '"', option['k'], option['i'], false);
        }
    }
    static async runWithSimulator() {
        await xcrun_1.default.runWithSimulator();
    }
    static async runWithHistory() {
        await xcrun_1.default.runWithHistory();
    }
}
exports.XcodeManager = XcodeManager;
