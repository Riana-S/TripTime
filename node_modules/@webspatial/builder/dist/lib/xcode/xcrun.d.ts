import { BasicAppInfo, SimulatorInfo } from '../types';
export default class Xcrun {
    static validate(path: string, key1: string, key2: string, useAccount: boolean): Promise<string>;
    static uploadPackage(path: string, key1: string, key2: string, appleId: string, useAccount: boolean): Promise<string>;
    static uploadApp(path: string, key1: string, key2: string, useAccount: boolean): Promise<string>;
    /**
     * @description
     * Find suitable simulator device
     * Attempt to build a testing app
     * Try running the test app on the simulator
     */
    static runWithSimulator(): Promise<void>;
    /**
     * @description
     * Attempt to launch the app using information from the history
     */
    static runWithHistory(): Promise<void>;
    /**
     * @description
     * Find a simulator with the given deviceId
     * If no deviceId is provided, find the first available simulator
     * If no simulator is found, create a new simulator
     * @param deviceId The deviceId of the simulator to find, defaulting to the first available simulator
     * @param appInfo
     *  appInfo.name is used for installing applications
     *  appInfo.id is used to launch the application
     * @returns The simulator device uuid
     */
    static launchWithSimulator(appInfo: BasicAppInfo, deviceId?: string, needFind?: boolean): string;
    static shutdownSimulator(): Promise<void>;
    private static launchSimulator;
    private static buildTestApp;
    private static terminateApp;
    private static installApp;
    private static launchApp;
    private static parseDestinationDevices;
    private static parseSupportDevices;
    private static parseSupportRuntimes;
    private static parseListDevices;
    private static parseDeviceInfo;
    static findSimulator(deviceId?: string): SimulatorInfo[];
    private static searchSimulator;
    static createSimulator(): {
        name: string;
        deviceId: string;
        state: string;
    };
    private static listSimulator;
}
